<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/WEB-INF/views/home.html" location="/WEB-INF/views/home.html" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver"></beans:property>
		<beans:property name="url" value="jdbc:jtds:sqlserver://localhost/VFINVENTORY"></beans:property>
		<beans:property name="username" value="Megalon"></beans:property>
		<beans:property name="password" value="Meg@lon"></beans:property>
	</beans:bean>

	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>org.verifone.myapp.entity.Device</beans:value>
				<beans:value>org.verifone.myapp.entity.Employee</beans:value>
				<beans:value>org.verifone.myapp.entity.Login</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
			
		</beans:property>
	</beans:bean>
	
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<beans:property name="basename" value="/WEB-INF/messages/message" />
    </beans:bean>
    
    <beans:bean id="employeeValidator" class="org.verifone.myapp.util.EmployeeFormValidator" />
	<beans:bean id="employeeService" class="org.verifone.myapp.service.EmployeeServiceImpl" />
	<beans:bean id="employeeDao" class="org.verifone.myapp.dao.EmployeeDaoImpl" />
	
	<beans:bean id="deviceService" class="org.verifone.myapp.service.DeviceServiceImpl" />
	<beans:bean id="deviceDao" class="org.verifone.myapp.dao.DeviceDaoImpl" />
	
	<beans:bean id="loginService" class="org.verifone.myapp.service.LoginServiceImpl" />
	<beans:bean id="loginDao" class="org.verifone.myapp.dao.LoginDaoImpl" />
	
	<context:component-scan base-package="org.verifone.myapp" />

</beans:beans>
